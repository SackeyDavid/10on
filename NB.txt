The departure and arrival dates for search must all have an equal number. //this is quite problematic ie. koforidua to tudu works but tudu to koforidua doesn't works, because the former has an addition trip. So for return trips, its about the index, departure index keys show be always grater than or equal to arrival to departure location

Problems/Bugs
1. if the number of outbound trips was more than the inbounds, I got array offset error because I wrote the progrram to work for equal number of out- and in-bounds.

soln: click on one of the error exception sources that showed the compiled code is the storage/framework folder on the left pane of the whoops window and found the error there

2. Ascending order compromised after P1 fix

Operartions
	Traveler Passenger & Payment details ID assignment 
*When traveler fills out passenger details without using registered user details, the id assigned them as saved in the passenger details table is maintained as their traveler ID which is kept parsed to necessary routes and views afterwards.

*As well, when they login later during the payment details specification stage, their registered user payment details ID is assigned them as their payment ID which is parsed to necessary routes and views afterwards.
So, once the details specifying stage for both passenger and payment is past, the id obtained in the controller is maintained throughout the booking process.

Mobile Money requirements details
-phone number or email
-password or pin

3. Route not defined error message when clearly defined 
Soln: -Place route at the bottom of routes list, that is beneath the auth middleware.
	  -Avoid using similar url words for different but related routes (very important to even prevent unintended redirects)


Problem not fixed
1. Credit card modal does not open after it has been opened once.
2. Open of modal when session expires
3. Session expiration login modal for views after the search results 
4. Route digit parameter randomization to prevent manipulation
5. Lowering down the number of collections to loop through when all database collections are passed to view.

Hubtel Account number: HM2604180034
Client ID: ahntkmmu
Client Secret: anxixrrt 

From mobile payment details option, we save appropriate payment_id (card or mobile) against the concerned booking process id and parse that payment_id to necessary routes and views.

For mobile money database table, password is used to represent pin 

Route not defined meanwhile it's defined could be as a result of the position of the route.

Non-functional requirements
The page must load fast,
with low-weight files

Source of Errors
*****Most errors seemed to have come from wrong identification/reference of/to DOM element, and wrong spelling

*****some times check developer console network for debugging 

Client will have to add the year to the dates when saving them

encoded base64 hubtel client details YWhudGttbXU6YW54aXhycnQ=

For page expired due to inactivity errors, check that the concerned form has a csrf token like '@csrf'


Lessons
* if a database table(say trips) column(say departure station) belongs to a larger set (say station database table), then instead of assigning just a part of the larger set, other than the id, to the trips table's departure station column , assign the id of the row of which the part is a column.    


Appreciation
A big thanks to stackoverflow